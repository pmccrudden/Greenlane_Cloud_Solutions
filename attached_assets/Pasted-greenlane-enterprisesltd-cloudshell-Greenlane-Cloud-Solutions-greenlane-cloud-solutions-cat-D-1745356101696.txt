greenlane_enterprisesltd@cloudshell:~/Greenlane_Cloud_Solutions (greenlane-cloud-solutions)$ cat > Dockerfile.simple << 'EOF'
FROM node:20-alpine

WORKDIR /app

# Create a simple Node.js application
RUN echo 'const http = require("http"); \
const port = process.env.PORT || 8080; \
const server = http.createServer((req, res) => { \
  console.log(`Received request: ${req.method} ${req.url}`); \
  res.writeHead(200, {"Content-Type": "text/plain"}); \
  res.end("Hello from Greenlane CRM!\n"); \
}); \
server.listen(port, "0.0.0.0", () => { \
  console.log(`Server listening on port ${port}`); \
});' > server.js

# Create a script to log debug info and start the server
RUN echo '#!/bin/sh' > start.sh && \
    echo 'echo "Current environment:"' >> start.sh && \
    echo 'printenv | grep -E "PORT|NODE|HOST"' >> start.sh && \
    echo 'echo "Starting application..."' >> start.sh && \
    echo 'node server.js' >> start.sh && \
    chmod +x start.sh

# Set environment variables
ENV PORT=8080
ENV HOST=0.0.0.0
ENV NODE_ENV=production

# Expose port
EXPOSE 8080

# Start the server
CMD ["./start.sh"]
EOF

# Create a simplified cloud build config
cat > cloudbuild.simple.yaml << 'EOF'
steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/greenlane-cloud-solutions/greenlane-crm-test', '-f', 'Dockerfile.simple', '.']
  # Push the container image to Container Registry
gcloud builds submit --config cloudbuild.simple.yamltest'est'e-crm-test']
Creating temporary archive of 200 file(s) totalling 4.0 MiB before compression.
Some files were not included in the source upload.

Check the gcloud log [/tmp/tmp.JosACCegeZ/logs/2025.04.22/21.05.28.747264.log] to see which files and the contents of the
default gcloudignore file used (see `$ gcloud topic gcloudignore` to learn
more).

Uploading tarball of [.] to [gs://greenlane-cloud-solutions_cloudbuild/source/1745355929.029854-201cf6456b80411dabdd6ec94c722db6.tgz]
Created [https://cloudbuild.googleapis.com/v1/projects/greenlane-cloud-solutions/locations/global/builds/fda532b4-adf9-40f3-b0d9-695dd5a4e9b5].
Logs are available at [ https://console.cloud.google.com/cloud-build/builds/fda532b4-adf9-40f3-b0d9-695dd5a4e9b5?project=869018523985 ].
Waiting for build to complete. Polling interval: 1 second(s).
------------------------------------------------------------------------------- REMOTE BUILD OUTPUT -------------------------------------------------------------------------------
starting build "fda532b4-adf9-40f3-b0d9-695dd5a4e9b5"

FETCHSOURCE
Fetching storage object: gs://greenlane-cloud-solutions_cloudbuild/source/1745355929.029854-201cf6456b80411dabdd6ec94c722db6.tgz#1745355931561702
Copying gs://greenlane-cloud-solutions_cloudbuild/source/1745355929.029854-201cf6456b80411dabdd6ec94c722db6.tgz#1745355931561702...
/ [1 files][  2.4 MiB/  2.4 MiB]                                                
Operation completed over 1 objects/2.4 MiB.
BUILD
Starting Step #0
Step #0: Already have image (with digest): gcr.io/cloud-builders/docker
Step #0: Sending build context to Docker daemon  4.382MB
Step #0: Step 1/9 : FROM node:20-alpine
Step #0: 20-alpine: Pulling from library/node
Step #0: f18232174bc9: Already exists
Step #0: a54ab62fca2d: Pulling fs layer
Step #0: 6bf3eed75316: Pulling fs layer
Step #0: efb51bda5e87: Pulling fs layer
Step #0: efb51bda5e87: Verifying Checksum
Step #0: efb51bda5e87: Download complete
Step #0: 6bf3eed75316: Verifying Checksum
Step #0: 6bf3eed75316: Download complete
Step #0: a54ab62fca2d: Verifying Checksum
Step #0: a54ab62fca2d: Download complete
Step #0: a54ab62fca2d: Pull complete
Step #0: 6bf3eed75316: Pull complete
Step #0: efb51bda5e87: Pull complete
Step #0: Digest: sha256:ce05c148e5e9d4fadcb25ea81236590142cb7982cd5732273cbcdcffd3420b6b
Step #0: Status: Downloaded newer image for node:20-alpine
Step #0:  ---> 0160beacba2d
Step #0: Step 2/9 : WORKDIR /app
Step #0:  ---> Running in f8184aec32e4
Step #0: Removing intermediate container f8184aec32e4
Step #0:  ---> 6ac54ab8f050
Step #0: Step 3/9 : RUN echo 'const http = require("http"); const port = process.env.PORT || 8080; const server = http.createServer((req, res) => {   console.log(`Received request: ${req.method} ${req.url}`);   res.writeHead(200, {"Content-Type": "text/plain"});   res.end("Hello from Greenlane CRM!\n"); }); server.listen(port, "0.0.0.0", () => {   console.log(`Server listening on port ${port}`); });' > server.js
Step #0:  ---> Running in d65512702eb5
Step #0: Removing intermediate container d65512702eb5
Step #0:  ---> 7fc0cdb4c070
Step #0: Step 4/9 : RUN echo '#!/bin/sh' > start.sh &&     echo 'echo "Current environment:"' >> start.sh &&     echo 'printenv | grep -E "PORT|NODE|HOST"' >> start.sh &&     echo 'echo "Starting application..."' >> start.sh &&     echo 'node server.js' >> start.sh &&     chmod +x start.sh
Step #0:  ---> Running in 797c5d485df1
Step #0: Removing intermediate container 797c5d485df1
Step #0:  ---> ff38416af496
Step #0: Step 5/9 : ENV PORT=8080
Step #0:  ---> Running in f484340d1846
Step #0: Removing intermediate container f484340d1846
Step #0:  ---> 638a53430a38
Step #0: Step 6/9 : ENV HOST=0.0.0.0
Step #0:  ---> Running in 522c9d66a5e0
Step #0: Removing intermediate container 522c9d66a5e0
Step #0:  ---> 060a9d3cfc45
Step #0: Step 7/9 : ENV NODE_ENV=production
Step #0:  ---> Running in 6596d5230b5e
Step #0: Removing intermediate container 6596d5230b5e
Step #0:  ---> 536fc1bd292b
Step #0: Step 8/9 : EXPOSE 8080
Step #0:  ---> Running in 75e484129607
Step #0: Removing intermediate container 75e484129607
Step #0:  ---> 57b49177c258
Step #0: Step 9/9 : CMD ["./start.sh"]
Step #0:  ---> Running in 3094ab6611b8
Step #0: Removing intermediate container 3094ab6611b8
Step #0:  ---> 377a9d5c0bd5
Step #0: Successfully built 377a9d5c0bd5
Step #0: Successfully tagged gcr.io/greenlane-cloud-solutions/greenlane-crm-test:latest
Finished Step #0
Starting Step #1
Step #1: Already have image (with digest): gcr.io/cloud-builders/docker
Step #1: Using default tag: latest
Step #1: The push refers to repository [gcr.io/greenlane-cloud-solutions/greenlane-crm-test]
Step #1: 16bf5b41e223: Preparing
Step #1: fc1a52d4e9f4: Preparing
Step #1: b51e996b69a8: Preparing
Step #1: b8185dcc9be5: Preparing
Step #1: 2c9cabe10289: Preparing
Step #1: 75228a052fed: Preparing
Step #1: 08000c18d16d: Preparing
Step #1: 75228a052fed: Waiting
Step #1: 08000c18d16d: Waiting
Step #1: 2c9cabe10289: Layer already exists
Step #1: b8185dcc9be5: Layer already exists
Step #1: 75228a052fed: Layer already exists
Step #1: 08000c18d16d: Layer already exists
Step #1: 16bf5b41e223: Pushed
Step #1: fc1a52d4e9f4: Pushed
Step #1: b51e996b69a8: Pushed
Step #1: latest: digest: sha256:e21a2549ea743fe49eb443e8124c7999c1de1d84368f744e9a7d9686231dcc05 size: 1779
Finished Step #1
Starting Step #2
Step #2: Pulling image: gcr.io/google.com/cloudsdktool/cloud-sdk
Step #2: Using default tag: latest
Step #2: latest: Pulling from google.com/cloudsdktool/cloud-sdk
Step #2: 23b7d26ef1d2: Already exists
Step #2: 414194ec006b: Pulling fs layer
Step #2: 119ced87cd2b: Pulling fs layer
Step #2: c12f750fbaf0: Pulling fs layer
Step #2: 2c9f1e00705a: Pulling fs layer
Step #2: 92c27e79463e: Pulling fs layer
Step #2: 6b0559dc4a91: Pulling fs layer
Step #2: 2c9f1e00705a: Waiting
Step #2: 92c27e79463e: Waiting
Step #2: 6b0559dc4a91: Waiting
Step #2: c12f750fbaf0: Verifying Checksum
Step #2: c12f750fbaf0: Download complete
Step #2: 119ced87cd2b: Verifying Checksum
Step #2: 119ced87cd2b: Download complete
Step #2: 414194ec006b: Download complete
Step #2: 6b0559dc4a91: Verifying Checksum
Step #2: 6b0559dc4a91: Download complete
Step #2: 92c27e79463e: Verifying Checksum
Step #2: 92c27e79463e: Download complete
Step #2: 414194ec006b: Pull complete
Step #2: 119ced87cd2b: Pull complete
Step #2: c12f750fbaf0: Pull complete
Step #2: 2c9f1e00705a: Verifying Checksum
Step #2: 2c9f1e00705a: Download complete
Step #2: 2c9f1e00705a: Pull complete
Step #2: 92c27e79463e: Pull complete
Step #2: 6b0559dc4a91: Pull complete
Step #2: Digest: sha256:348ebedf45eb6979ec93359df987ecb007ad570ae9279d1fe46e7f2f3da651b5
Step #2: Status: Downloaded newer image for gcr.io/google.com/cloudsdktool/cloud-sdk:latest
Step #2: gcr.io/google.com/cloudsdktool/cloud-sdk:latest
Step #2: Deploying container to Cloud Run service [greenlane-crm-test] in project [greenlane-cloud-solutions] region [us-central1]
Step #2: Deploying new service...
Step #2: Setting IAM Policy...........warning
Step #2: Creating Revision.........................................................done
Step #2: Routing traffic.....done
Step #2: Completed with warnings:
Step #2:   Setting IAM policy failed, try "gcloud beta run services add-iam-policy-binding --region=us-central1 --member=allUsers --role=roles/run.invoker greenlane-crm-test"
Step #2: Service [greenlane-crm-test] revision [greenlane-crm-test-00001-7vc] has been deployed and is serving 100 percent of traffic.
Step #2: Service URL: https://greenlane-crm-test-869018523985.us-central1.run.app
Finished Step #2
PUSH
Pushing gcr.io/greenlane-cloud-solutions/greenlane-crm-test
The push refers to repository [gcr.io/greenlane-cloud-solutions/greenlane-crm-test]
16bf5b41e223: Preparing
fc1a52d4e9f4: Preparing
b51e996b69a8: Preparing
b8185dcc9be5: Preparing
2c9cabe10289: Preparing
75228a052fed: Preparing
08000c18d16d: Preparing
75228a052fed: Waiting
08000c18d16d: Waiting
fc1a52d4e9f4: Layer already exists
16bf5b41e223: Layer already exists
2c9cabe10289: Layer already exists
b8185dcc9be5: Layer already exists
b51e996b69a8: Layer already exists
75228a052fed: Layer already exists
08000c18d16d: Layer already exists
latest: digest: sha256:e21a2549ea743fe49eb443e8124c7999c1de1d84368f744e9a7d9686231dcc05 size: 1779
DONE
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ID                                    CREATE_TIME                DURATION  SOURCE                                                                                                   IMAGES                                                         STATUS
fda532b4-adf9-40f3-b0d9-695dd5a4e9b5  2025-04-22T21:05:31+00:00  1M40S     gs://greenlane-cloud-solutions_cloudbuild/source/1745355929.029854-201cf6456b80411dabdd6ec94c722db6.tgz  gcr.io/greenlane-cloud-solutions/greenlane-crm-test (+1 more)  SUCCESS