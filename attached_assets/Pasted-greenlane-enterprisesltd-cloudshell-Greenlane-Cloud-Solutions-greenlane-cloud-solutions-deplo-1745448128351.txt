greenlane_enterprisesltd@cloudshell:~/Greenlane_Cloud_Solutions (greenlane-cloud-solutions)$ ./deploy-minimal-cloud.sh
=== Deploying Minimal Cloud Run App for Greenlane CRM ===
Testing minimal server locally...
file:///home/greenlane_enterprisesltd/Greenlane_Cloud_Solutions/app-minimal-cloud.js:6
const http = require('http');
             ^

ReferenceError: require is not defined in ES module scope, you can use import instead
This file is being treated as an ES module because it has a '.js' file extension and '/home/greenlane_enterprisesltd/Greenlane_Cloud_Solutions/package.json' contains "type": "module". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.
    at file:///home/greenlane_enterprisesltd/Greenlane_Cloud_Solutions/app-minimal-cloud.js:6:14
    at ModuleJob.run (node:internal/modules/esm/module_job:271:25)
    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:578:26)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:116:5)

Node.js v22.14.0
Sending test request to http://localhost:8080/health

./deploy-minimal-cloud.sh: line 16: kill: (4444) - No such process
Submitting build to Cloud Build...
Creating temporary archive of 261 file(s) totalling 4.6 MiB before compression.
Some files were not included in the source upload.

Check the gcloud log [/tmp/tmp.t2T3dt026z/logs/2025.04.23/22.34.53.168512.log] to see which files and the contents of the
default gcloudignore file used (see `$ gcloud topic gcloudignore` to learn
more).

Uploading tarball of [.] to [gs://greenlane-cloud-solutions_cloudbuild/source/1745447693.444062-7a406ce832134435b6e0bd9147a0535d.tgz]
Created [https://cloudbuild.googleapis.com/v1/projects/greenlane-cloud-solutions/locations/global/builds/2bf6a8d1-6486-4c5a-80d2-747f1cbf7081].
Logs are available at [ https://console.cloud.google.com/cloud-build/builds/2bf6a8d1-6486-4c5a-80d2-747f1cbf7081?project=869018523985 ].
Waiting for build to complete. Polling interval: 1 second(s).
------------------------------------------------------------------------------- REMOTE BUILD OUTPUT -------------------------------------------------------------------------------
starting build "2bf6a8d1-6486-4c5a-80d2-747f1cbf7081"

FETCHSOURCE
Fetching storage object: gs://greenlane-cloud-solutions_cloudbuild/source/1745447693.444062-7a406ce832134435b6e0bd9147a0535d.tgz#1745447695557904
Copying gs://greenlane-cloud-solutions_cloudbuild/source/1745447693.444062-7a406ce832134435b6e0bd9147a0535d.tgz#1745447695557904...
/ [1 files][  2.5 MiB/  2.5 MiB]                                                
Operation completed over 1 objects/2.5 MiB.
BUILD
Starting Step #0
Step #0: Already have image (with digest): gcr.io/cloud-builders/docker
Step #0: Sending build context to Docker daemon  5.049MB
Step #0: Step 1/9 : FROM node:20-alpine
Step #0: 20-alpine: Pulling from library/node
Step #0: f18232174bc9: Already exists
Step #0: a54ab62fca2d: Pulling fs layer
Step #0: 6bf3eed75316: Pulling fs layer
Step #0: efb51bda5e87: Pulling fs layer
Step #0: efb51bda5e87: Verifying Checksum
Step #0: efb51bda5e87: Download complete
Step #0: 6bf3eed75316: Verifying Checksum
Step #0: 6bf3eed75316: Download complete
Step #0: a54ab62fca2d: Download complete
Step #0: a54ab62fca2d: Pull complete
Step #0: 6bf3eed75316: Pull complete
Step #0: efb51bda5e87: Pull complete
Step #0: Digest: sha256:c628bdc7ebc7f95b1b23249a445eb415ce68ae9def8b68364b35ee15e3065b0f
Step #0: Status: Downloaded newer image for node:20-alpine
Step #0:  ---> 0160beacba2d
Step #0: Step 2/9 : RUN apk add --no-cache curl
Step #0:  ---> Running in 454d576563b0
Step #0: fetch https://dl-cdn.alpinelinux.org/alpine/v3.21/main/x86_64/APKINDEX.tar.gz
Step #0: fetch https://dl-cdn.alpinelinux.org/alpine/v3.21/community/x86_64/APKINDEX.tar.gz
Step #0: (1/9) Installing brotli-libs (1.1.0-r2)
Step #0: (2/9) Installing c-ares (1.34.5-r0)
Step #0: (3/9) Installing libunistring (1.2-r0)
Step #0: (4/9) Installing libidn2 (2.3.7-r0)
Step #0: (5/9) Installing nghttp2-libs (1.64.0-r0)
Step #0: (6/9) Installing libpsl (0.21.5-r3)
Step #0: (7/9) Installing zstd-libs (1.5.6-r2)
Step #0: (8/9) Installing libcurl (8.12.1-r1)
Step #0: (9/9) Installing curl (8.12.1-r1)
Step #0: Executing busybox-1.37.0-r12.trigger
Step #0: OK: 14 MiB in 26 packages
Step #0: Removing intermediate container 454d576563b0
Step #0:  ---> e724590981b1
Step #0: Step 3/9 : WORKDIR /app
Step #0:  ---> Running in a430a325bbe4
Step #0: Removing intermediate container a430a325bbe4
Step #0:  ---> 3c0dd68d7be1
Step #0: Step 4/9 : COPY app-minimal-cloud.js .
Step #0:  ---> 001abb879460
Step #0: Step 5/9 : ENV NODE_ENV=production
Step #0:  ---> Running in 5c6ea5cd6cd7
Step #0: Removing intermediate container 5c6ea5cd6cd7
Step #0:  ---> f337ecbb7da0
Step #0: Step 6/9 : ENV PORT=8080
Step #0:  ---> Running in 8bed84c05652
Step #0: Removing intermediate container 8bed84c05652
Step #0:  ---> d0ea2386c0d8
Step #0: Step 7/9 : HEALTHCHECK --interval=5s --timeout=10s --start-period=5s --retries=3 CMD curl -f http://localhost:8080/health || exit 1
Step #0:  ---> Running in a089f8da39b3
Step #0: Removing intermediate container a089f8da39b3
Step #0:  ---> ac93aa7c03e2
Step #0: Step 8/9 : EXPOSE 8080
Step #0:  ---> Running in 29e89ac64a0c
Step #0: Removing intermediate container 29e89ac64a0c
Step #0:  ---> 24a06a0f0d94
Step #0: Step 9/9 : CMD ["node", "app-minimal-cloud.js"]
Step #0:  ---> Running in 3fc494f66888
Step #0: Removing intermediate container 3fc494f66888
Step #0:  ---> 17fabd420cd7
Step #0: Successfully built 17fabd420cd7
Step #0: Successfully tagged gcr.io/greenlane-cloud-solutions/greenlane-minimal:latest
Finished Step #0
Starting Step #1
Step #1: Already have image (with digest): gcr.io/cloud-builders/docker
Step #1: Using default tag: latest
Step #1: The push refers to repository [gcr.io/greenlane-cloud-solutions/greenlane-minimal]
Step #1: 2d43f7bb56e6: Preparing
Step #1: 66df00bb6b2b: Preparing
Step #1: 946b0b60ed90: Preparing
Step #1: b8185dcc9be5: Preparing
Step #1: 2c9cabe10289: Preparing
Step #1: 75228a052fed: Preparing
Step #1: 08000c18d16d: Preparing
Step #1: 75228a052fed: Waiting
Step #1: 08000c18d16d: Waiting
Step #1: 2c9cabe10289: Layer already exists
Step #1: b8185dcc9be5: Layer already exists
Step #1: 75228a052fed: Layer already exists
Step #1: 08000c18d16d: Layer already exists
Step #1: 66df00bb6b2b: Pushed
Step #1: 2d43f7bb56e6: Pushed
Step #1: 946b0b60ed90: Pushed
Step #1: latest: digest: sha256:f4dc54162f4a8f76b7239bfe93862ae5d459a51c07cc3aa4b969146cb3b91f82 size: 1784
Finished Step #1
Starting Step #2
Step #2: Pulling image: gcr.io/google.com/cloudsdktool/cloud-sdk
Step #2: Using default tag: latest
Step #2: latest: Pulling from google.com/cloudsdktool/cloud-sdk
Step #2: 23b7d26ef1d2: Already exists
Step #2: 414194ec006b: Pulling fs layer
Step #2: 119ced87cd2b: Pulling fs layer
Step #2: c12f750fbaf0: Pulling fs layer
Step #2: 2c9f1e00705a: Pulling fs layer
Step #2: 92c27e79463e: Pulling fs layer
Step #2: 6b0559dc4a91: Pulling fs layer
Step #2: 92c27e79463e: Waiting
Step #2: 6b0559dc4a91: Waiting
Step #2: 2c9f1e00705a: Waiting
Step #2: c12f750fbaf0: Verifying Checksum
Step #2: c12f750fbaf0: Download complete
Step #2: 414194ec006b: Verifying Checksum
Step #2: 414194ec006b: Download complete
Step #2: 119ced87cd2b: Verifying Checksum
Step #2: 119ced87cd2b: Download complete
Step #2: 6b0559dc4a91: Verifying Checksum
Step #2: 6b0559dc4a91: Download complete
Step #2: 92c27e79463e: Verifying Checksum
Step #2: 92c27e79463e: Download complete
Step #2: 414194ec006b: Pull complete
Step #2: 119ced87cd2b: Pull complete
Step #2: c12f750fbaf0: Pull complete
Step #2: 2c9f1e00705a: Verifying Checksum
Step #2: 2c9f1e00705a: Download complete
Step #2: 2c9f1e00705a: Pull complete
Step #2: 92c27e79463e: Pull complete
Step #2: 6b0559dc4a91: Pull complete
Step #2: Digest: sha256:348ebedf45eb6979ec93359df987ecb007ad570ae9279d1fe46e7f2f3da651b5
Step #2: Status: Downloaded newer image for gcr.io/google.com/cloudsdktool/cloud-sdk:latest
Step #2: gcr.io/google.com/cloudsdktool/cloud-sdk:latest
Step #2: ERROR: (gcloud.run.deploy) unrecognized arguments: true 
Step #2: 
Step #2: To search the help text of gcloud commands, run:
Step #2:   gcloud help -- SEARCH_TERMS
Finished Step #2
ERROR
ERROR: build step 2 "gcr.io/google.com/cloudsdktool/cloud-sdk" failed: step exited with non-zero status: 2
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

BUILD FAILURE: Build step failure: build step 2 "gcr.io/google.com/cloudsdktool/cloud-sdk" failed: step exited with non-zero status: 2
ERROR: (gcloud.builds.submit) build 2bf6a8d1-6486-4c5a-80d2-747f1cbf7081 completed with status "FAILURE"
Setting IAM policy for public access...
Updated IAM policy for service [greenlane-minimal].
bindings:
- members:
  - allUsers
  role: roles/run.invoker
etag: BwYzebv3ydk=
version: 1
Retrieving service URL...
Service deployed successfully to: https://greenlane-minimal-mx3osic2uq-uc.a.run.app
Testing service health endpoint...
{"status":"ok","timestamp":"2025-04-23T22:36:40.875Z"}
Open this URL in your browser: https://greenlane-minimal-mx3osic2uq-uc.a.run.app
Saving service URL for DNS configuration...
The service hostname is saved to service_hostname.txt for use with Cloudflare DNS setup.
Deployment completed.
greenlane_enterprisesltd@cloudshell:~/Greenlane_Cloud_Solutions (greenlane-cloud-solutions)$ ./update-dns-from-minimal.sh
=== Setting up Cloudflare DNS for Greenlane CRM ===
Using service hostname: greenlane-minimal-mx3osic2uq-uc.a.run.app
Cloudflare credentials not found in environment.
Attempting to retrieve from Google Cloud Secret Manager...
Found Cloudflare API Token in Secret Manager. Retrieving...
Found Cloudflare Zone ID in Secret Manager. Retrieving...
Updating Cloudflare DNS settings...
file:///home/greenlane_enterprisesltd/Greenlane_Cloud_Solutions/setup-cloudflare-dns.js:2
const fetch = require('node-fetch');
              ^

ReferenceError: require is not defined in ES module scope, you can use import instead
This file is being treated as an ES module because it has a '.js' file extension and '/home/greenlane_enterprisesltd/Greenlane_Cloud_Solutions/package.json' contains "type": "module". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.
    at file:///home/greenlane_enterprisesltd/Greenlane_Cloud_Solutions/setup-cloudflare-dns.js:2:15
    at ModuleJob.run (node:internal/modules/esm/module_job:271:25)
    at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:578:26)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:116:5)

Node.js v22.14.0
DNS update process completed.
Note: DNS changes may take some time to propagate globally (typically 5-30 minutes).
Once propagated, your application will be available at:
 - https://greenlanecloudsolutions.com (marketing site)
 - https://app.greenlanecloudsolutions.com (main app)
 - https://api.greenlanecloudsolutions.com (API endpoints)
 - https://<tenant-name>.greenlanecloudsolutions.com (for each tenant)