FROM node:20-alpine as builder

WORKDIR /app

# Copy package files first for better caching
COPY package.json package-lock.json ./

# Install all dependencies for build
RUN npm ci

# Copy the rest of the source code
COPY . .

# Build the application
RUN npm run build && \
    echo "Build complete. Listing contents:" && \
    ls -la ./dist && \
    echo "Client files:" && \
    ls -la ./dist/public || echo "No dist/public directory"

# If build didn't create the dist/public directory, create it
RUN if [ ! -d "./dist/public" ]; then \
      echo "dist/public directory missing, running build again with debug info"; \
      NODE_ENV=production npm run build; \
      mkdir -p ./dist/public; \
    fi

# Verify client files exist
RUN if [ ! -f "./dist/public/index.html" ]; then \
      echo "WARNING: index.html not found in dist/public, something went wrong with the build"; \
    else \
      echo "Verified index.html exists"; \
      ls -la ./dist/public; \
    fi

# Start a new stage for the production image
FROM node:20-alpine as production

WORKDIR /app

# Copy package files for production
COPY package.json package-lock.json ./

# Install production dependencies only
RUN npm ci --only=production

# Copy pre-built assets from builder stage
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/shared ./shared
COPY --from=builder /app/server ./server
COPY --from=builder /app/client ./client

# Copy enhanced ESM server file
COPY server-esm.js ./

# Prepare fallback static content only if index.html doesn't exist
RUN if [ ! -f "./dist/public/index.html" ]; then \
      echo "WARNING: Creating fallback index.html"; \
      mkdir -p ./dist/public && \
      echo '<html><head><title>Greenlane CRM</title></head><body><h1>Greenlane CRM API Server</h1><p>The API server is running.</p></body></html>' > ./dist/public/index.html; \
    else \
      echo "Found existing index.html, not overwriting"; \
    fi

# Diagnostic logs
RUN echo "Files in /app:"
RUN ls -la /app
RUN echo "Contents of /app/dist:"
RUN ls -la /app/dist || echo "dist directory missing or empty"
RUN echo "Contents of /app/dist/public:"
RUN ls -la /app/dist/public || echo "dist/public directory missing or empty"

# Set environment variables
ENV NODE_ENV=production
ENV HOST=0.0.0.0
ENV PORT=8080
ENV BASE_DOMAIN=greenlanecloudsolutions.com

# Expose the port the app will run on
EXPOSE 8080

# Run the enhanced ESM server directly
CMD ["node", "server-esm.js"]