FROM node:20-alpine as builder

WORKDIR /app

# Copy package files first for better caching
COPY package.json package-lock.json ./

# Install all dependencies for build
RUN npm ci

# Copy the rest of the source code
COPY . .

# Build the application
RUN npm run build

# Start a new stage for the production image
FROM node:20-alpine as production

WORKDIR /app

# Copy package files for production
COPY package.json package-lock.json ./

# Install production dependencies only
RUN npm ci --only=production

# Copy pre-built assets from builder stage
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/shared ./shared
COPY --from=builder /app/server ./server

# Copy server startup files
COPY server.js ./

# Diagnostic logs
RUN echo "Files in /app:"
RUN ls -la /app
RUN echo "Contents of /app/dist:"
RUN ls -la /app/dist || echo "dist directory missing or empty"

# Set environment variables
ENV NODE_ENV=production
ENV HOST=0.0.0.0
ENV PORT=8080

# Expose the port the app will run on
EXPOSE 8080

# Run the server directly with node, ensuring ES module mode
CMD ["node", "--experimental-specifier-resolution=node", "server.js"]